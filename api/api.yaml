openapi: 3.0.0
info:
  title: JWT Server
  description: API specification for JWT Server
  version: '1.0'
  license:
    name: 'Apache 2.0'
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  '/api/v1/project/{projectName}/.well-known/openid-configuration':
    get:
      tags:
        - openid-connect
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIDConfiguration'
  '/api/v1/project/{projectName}/openid-connect/token':
    post:
      tags:
        - openid-connect
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: grant_type
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
        - name: client_id
          in: query
          schema:
            type: string
        - name: client_secret
          in: query
          schema:
            type: string
        - name: scope
          in: query
          schema:
            type: string
        - name: refresh_token
          in: query
          schema:
            type: string
        - name: redirect_uri
          in: query
          schema:
            type: string
        - name: code
          in: query
          schema:
            type: string
        - name: code_verifier
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 'Get Token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  '/api/v1/project':
    post:
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '200':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetResponse'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden'
        '409':
          description: 'Project Already Exists'
        '500':
          description: 'Internal Server Error'
    get:
      tags:
        - project
      responses:
        '200':
          description: 'Get All Project IDs'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}':
    get:
      tags:
        - project
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully get project info'
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetResponse'
        '404':
          description: 'Project Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    put:
      tags:
        - project
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPutRequest'
      responses:
        '204':
          description: 'Updated'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Project Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    delete:
      tags:
        - project
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deleted'
        '404':
          description: 'Project Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}/user':
    post:
      tags:
        - user
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '200':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
        '400':
          description: 'Bad Request'
        '409':
          description: 'User Already Exists'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    get:
      tags:
        - user
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get All User IDs'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: 'User Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}/user/{userID}':
    get:
      tags:
        - user
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully get user info'
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
        '404':
          description: 'User Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    put:
      tags:
        - user
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPutRequest'
      responses:
        '204':
          description: 'Updated'
        '400':
          description: 'Bad Request'
        '404':
          description: 'User Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    delete:
      tags:
        - user
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deleted'
        '404':
          description: 'User Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}/user/{userID}/role/{roleID}':
    post:
      tags:
        - user
      description: 'Add a role to the user'
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
        - name: roleID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Added'
        '404':
          description: 'User or Project or Role Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    delete:
      tags:
        - user
      description: 'Delete a role from the user'
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
        - name: roleID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deleted'
        '404':
          description: 'User or Project or Role Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}/client':
    post:
      tags:
        - client
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateRequest'
      responses:
        '200':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGetResponse'
        '400':
          description: 'Bad Request'
        '409':
          description: 'Client Already Exists'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    get:
      tags:
        - client
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get All Client IDs'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: 'Project Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
  '/api/v1/project/{projectName}/client/{clientID}':
    get:
      tags:
        - client
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: clientID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully get client info'
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGetResponse'
        '404':
          description: 'Client Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    put:
      tags:
        - client
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: clientID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPutRequest'
      responses:
        '204':
          description: 'Updated'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Client Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
    delete:
      tags:
        - client
      parameters:
        - name: projectName
          in: path
          required: true
          schema:
            type: string
        - name: clientID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deleted'
        '404':
          description: 'User Not Found'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal Server Error'
components:
  schemas:
    ProjectCreateRequest:
      type: object
      properties:
        name:
          type: string
        tokenConfig:
          $ref: '#/components/schemas/TokenConfig'
    ProjectGetResponse:
      type: object
      properties:
        name:
          type: string
        createdAt:
          type: string
          format: date
        tokenConfig:
          $ref: '#/components/schemas/TokenConfig'
    ProjectPutRequest:
      type: object
      properties:
        name:
          type: string
        tokenConfig:
          $ref: '#/components/schemas/TokenConfig'
    TokenConfig:
      type: object
      properties:
        accessTokenLifeSpan:
          type: integer
        refreshTokenLifeSpan:
          type: integer
    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
          format: password
        roles:
          description: 'Array of role IDs'
          type: array
          items:
            type: string
    UserGetResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        passwordHash:
          type: string
        createdAt:
          type: string
          format: date
        roles:
          description: 'Array of role IDs'
          type: array
          items:
            type: string
    UserPutRequest:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        roles:
          description: 'Array of role IDs'
          type: array
          items:
            type: string
    ClientCreateRequest:
      type: object
      properties:
        id:
          type: string
        secret:
          type: string
        access_type:
          type: string
        allowed_callback_urls:
          type: array
          items:
            type: string
    ClientGetResponse:
      type: object
      properties:
        id:
          type: string
        secret:
          type: string
        access_type:
          type: string
        created_at:
          type: string
          format: date
        allowed_callback_urls:
          type: array
          items:
            type: string
    ClientPutRequest:
      type: object
      properties:
        secret:
          type: string
        access_type:
          type: string
        allowed_callback_urls:
          type: array
          items:
            type: string
    TokenResponse:
      type: object
      properties:
        token_type:
          type: string
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        refresh_expires_in:
          type: integer
    OpenIDConfiguration:
      type: object
      properties:
        issuer:
          type: string
        authorization_endpoint:
          type: string
        token_endpoint:
          type: string
        userinfo_endpoint:
          type: string
        jwks_uri:
          type: string
        scopes_supported:
          type: array
          items:
            type: string
        response_types_supported:
          type: array
          items:
            type: string
        subject_types_supported:
          type: array
          items:
            type: string
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
        claims_supported:
          type: array
          items:
            type: string

